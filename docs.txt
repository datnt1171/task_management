Documentation for Task Management Project

Project Overview
	What: Task Management system which follow fixed ISO process
	Who its for: Internal company use

	Tech stack:
	Frontend: Nextjs, Tailwind, Axios
	Backend: Django, DRF
	Auth: JWT
	Database: PostgreSQL
	
2. Repository Structure
	Frontend
    └── 📁app
        └── 📁api
            └── 📁auth
                └── 📁login
                    └── route.ts
                └── 📁logout
                    └── route.ts
                └── middleware.ts
                └── 📁refresh
                    └── route.ts
            └── 📁processes
                └── 📁[id]
                    └── route.ts
                └── route.ts
            └── 📁tasks
                └── 📁[id]
                    └── 📁actions
                        └── route.ts
                    └── route.ts
                └── 📁received
                    └── route.ts
                └── route.ts
                └── 📁sent
                    └── route.ts
            └── 📁users
                └── 📁me
                    └── route.ts
                └── route.ts
        └── 📁dashboard
            └── 📁forms
                └── 📁[id]
                    └── page.tsx
                └── loading.tsx
                └── page.tsx
            └── layout.tsx
            └── page.tsx
            └── 📁received
                └── loading.tsx
                └── page.tsx
            └── 📁sent
                └── loading.tsx
                └── page.tsx
            └── 📁task
                └── 📁[id]
                    └── page.tsx
        └── favicon.ico
        └── globals.css
        └── layout.tsx
        └── 📁login
            └── page.tsx
        └── page.tsx
    └── 📁components
        └── login-form.tsx
        └── 📁ui
            └── badge.tsx
            └── button.tsx
            └── card.tsx
            └── checkbox.tsx
            └── dialog.tsx
            └── dropdown-menu.tsx
            └── input.tsx
            └── label.tsx
            └── select.tsx
            └── separator.tsx
            └── table.tsx
            └── textarea.tsx
    └── 📁lib
        └── api-service.ts
        └── utils.ts
    └── 📁public
    └── .env.local
    └── .gitignore
    └── eslint.config.mjs
    └── middleware.ts
    └── next-env.d.ts
    └── next.config.ts
    └── package-lock.json
    └── package.json
    └── postcss.config.js
    └── README.md
    └── tailwind.config.ts
    └── tsconfig.json

	Backend
    └── 📁process
        └── __init__.py
        └── 📁__pycache__
            └── __init__.cpython-312.pyc
            └── admin.cpython-312.pyc
            └── apps.cpython-312.pyc
            └── models.cpython-312.pyc
            └── serializers.cpython-312.pyc
            └── urls.cpython-312.pyc
            └── views.cpython-312.pyc
        └── admin.py
        └── apps.py
        └── 📁migrations
            └── __init__.py
            └── 📁__pycache__
                └── __init__.cpython-312.pyc
                └── 0001_initial.cpython-312.pyc
                └── 0002_initial.cpython-312.pyc
                └── 0003_alter_processfield_field_type.cpython-312.pyc
                └── 0004_process_description_processfield_options_and_more.cpython-312.pyc
                └── 0005_alter_processfield_options_processfield_order_and_more.cpython-312.pyc
            └── 0001_initial.py
            └── 0002_initial.py
            └── 0003_alter_processfield_field_type.py
            └── 0004_process_description_processfield_options_and_more.py
            └── 0005_alter_processfield_options_processfield_order_and_more.py
        └── models.py
        └── serializers.py
        └── tests.py
        └── urls.py
        └── views.py
    └── 📁task
    └── 📁task_management
        └── __init__.py
        └── 📁__pycache__
            └── __init__.cpython-312.pyc
            └── settings.cpython-312.pyc
            └── urls.cpython-312.pyc
            └── wsgi.cpython-312.pyc
        └── asgi.py
        └── settings.py
        └── urls.py
        └── wsgi.py
        └── __init__.py
        └── 📁__pycache__
            └── __init__.cpython-312.pyc
            └── admin.cpython-312.pyc
            └── apps.cpython-312.pyc
            └── models.cpython-312.pyc
            └── serializers.cpython-312.pyc
            └── urls.cpython-312.pyc
            └── views.cpython-312.pyc
        └── admin.py
        └── apps.py
        └── 📁migrations
            └── __init__.py
            └── 📁__pycache__
                └── __init__.cpython-312.pyc
                └── 0001_initial.cpython-312.pyc
                └── 0002_initial.cpython-312.pyc
                └── 0003_remove_taskactionlog_transition.cpython-312.pyc
                └── 0004_delete_taskuser.cpython-312.pyc
            └── 0001_initial.py
            └── 0002_initial.py
            └── 0003_remove_taskactionlog_transition.py
            └── 0004_delete_taskuser.py
        └── models.py
        └── serializers.py
        └── tests.py
        └── urls.py
        └── views.py
    └── 📁user
        └── __init__.py
        └── 📁__pycache__
            └── __init__.cpython-312.pyc
            └── admin.cpython-312.pyc
            └── apps.cpython-312.pyc
            └── models.cpython-312.pyc
            └── serializers.cpython-312.pyc
            └── urls.cpython-312.pyc
            └── views.cpython-312.pyc
        └── admin.py
        └── apps.py
        └── 📁migrations
            └── __init__.py
            └── 📁__pycache__
                └── __init__.cpython-312.pyc
                └── 0001_initial.cpython-312.pyc
            └── 0001_initial.py
        └── models.py
        └── serializers.py
        └── tests.py
        └── urls.py
        └── views.py
    └── 📁workflow_engine
        └── __init__.py
        └── 📁__pycache__
            └── __init__.cpython-312.pyc
            └── admin.cpython-312.pyc
            └── apps.cpython-312.pyc
            └── models.cpython-312.pyc
        └── admin.py
        └── apps.py
        └── 📁migrations
            └── __init__.py
            └── 📁__pycache__
                └── __init__.cpython-312.pyc
                └── 0001_initial.cpython-312.pyc
                └── 0002_state_is_first_state_state_is_last_state.cpython-312.pyc
                └── 0003_remove_state_is_first_state_and_more.cpython-312.pyc
            └── 0001_initial.py
            └── 0002_state_is_first_state_state_is_last_state.py
            └── 0003_remove_state_is_first_state_and_more.py
        └── models.py
        └── serializers.py
        └── tests.py
        └── urls.py
        └── views.py
    └── .env
    └── .gitignore
    └── docs.txt
    └── manage.py
    └── requirements.txt
    └── test_api.http


API documentation
http://localhost:8000/api/processes/
{
  "count": 123,
  "next": "http://api.example.org/accounts/?offset=400&limit=100",
  "previous": "http://api.example.org/accounts/?offset=200&limit=100",
  "results": [
    {
      "id": 0,
      "name": "string",
      "description": "string",
      "fields": [
        {
          "id": 0,
          "name": "string",
          "field_type": "text",
          "required": true,
          "options": null,
          "order": 2147483647
        }
      ]
    }
  ]
}

http://localhost:8000/api/processes/{id}/
{
  "id": 0,
  "name": "string",
  "description": "string",
  "fields": [
    {
      "id": 0,
      "name": "string",
      "field_type": "text",
      "required": true,
      "options": null,
      "order": 2147483647
    }
  ]
}

http://localhost:8000/api/tasks/
{
  "process": 0,
  "title": "string",
  "fields": [
    {
      "field_id": 0,
      "value": "string"
    }
  ]
}

http://localhost:8000/api/tasks/{id}/
{
  "id": 0,
  "title": "string",
  "process": {
    "id": 0,
    "name": "string"
  },
  "state": {
    "id": 0,
    "name": "string",
    "state_type": "string"
  },
  "created_by": {
    "id": 0,
    "username": "string"
  },
  "created_at": "2019-08-24T14:15:22Z",
  "task_data": [
    {
      "field": "string",
      "value": "string"
    }
  ],
  "action_logs": [
    {
      "id": 0,
      "user": {
        "id": 0,
        "username": "string"
      },
      "action": "string",
      "task_title": "string",
      "timestamp": "2019-08-24T14:15:22Z"
    }
  ],
  "available_actions": "string"
}

http://localhost:8000/api/tasks/{id}/action/
{
  "count": 123,
  "next": "http://api.example.org/accounts/?offset=400&limit=100",
  "previous": "http://api.example.org/accounts/?offset=200&limit=100",
  "results": [
    {
      "id": 0,
      "title": "string",
      "process": {
        "id": 0,
        "name": "string"
      },
      "state": "string",
      "state_type": "string",
      "created_at": "2019-08-24T14:15:22Z",
      "created_by": "string",
      "action": "string"
    }
  ]
}

http://localhost:8000/api/tasks/received/
{
  "count": 123,
  "next": "http://api.example.org/accounts/?offset=400&limit=100",
  "previous": "http://api.example.org/accounts/?offset=200&limit=100",
  "results": [
    {
      "id": 0,
      "title": "string",
      "process": {
        "id": 0,
        "name": "string"
      },
      "state": "string",
      "state_type": "string",
      "created_at": "2019-08-24T14:15:22Z",
      "created_by": "string",
      "action": "string"
    }
  ]
}

http://localhost:8000/api/tasks/sent/
{
  "count": 123,
  "next": "http://api.example.org/accounts/?offset=400&limit=100",
  "previous": "http://api.example.org/accounts/?offset=200&limit=100",
  "results": [
    {
      "id": 0,
      "title": "string",
      "process": {
        "id": 0,
        "name": "string"
      },
      "state": "string",
      "state_type": "string",
      "created_at": "2019-08-24T14:15:22Z",
      "recipient": "string"
    }
  ]
}

http://localhost:8000/api/token/
{
  "username": "string",
  "password": "string"
}

http://localhost:8000/api/token/refresh/

{
  "refresh": "string"
}

http://localhost:8000/api/users/

{
  "count": 123,
  "next": "http://api.example.org/accounts/?offset=400&limit=100",
  "previous": "http://api.example.org/accounts/?offset=200&limit=100",
  "results": [
    {
      "id": 0,
      "username": "^w$",
      "first_name": "string",
      "last_name": "string",
      "department": {
        "id": 0,
        "name": "string"
      },
      "role": {
        "id": 0,
        "name": "string"
      }
    }
  ]
}

http://localhost:8000/api/users/me/

{
  "id": 0,
  "username": "^w$",
  "first_name": "string",
  "last_name": "string",
  "department": {
    "id": 0,
    "name": "string"
  },
  "role": {
    "id": 0,
    "name": "string"
  }
}